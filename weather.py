import os
import requests
from dotenv import load_dotenv
load_dotenv()

CITIES = [
    {'name': '–ö—Ä–∞—Å–Ω–æ–¥–∞—Ä', 'lat': '45.044173', 'lon': '38.973035'},
    {'name': '–¢–µ–º—Ä—é–∫', 'lat': '45.282955', 'lon': '37.365044'},
    {'name': '–í–æ–ª–Ω–∞', 'lat': '45.128057', 'lon': '36.711721'},
]

condition = {
    'clear': '—è—Å–Ω–æ ‚òÄ',
    'partly-cloudy': '–º–∞–ª–æ–æ–±–ª–∞—á–Ω–æ üå§',
    'cloudy': '–æ–±–ª–∞—á–Ω–æ —Å –ø—Ä–æ—è—Å–Ω–µ–Ω–∏—è–º–∏ ‚õÖ',
    'overcast': '–ø–∞—Å–º—É—Ä–Ω–æ ‚òÅ',
    'drizzle': '–º–æ—Ä–æ—Å—å üå¶',
    'light-rain': '–Ω–µ–±–æ–ª—å—à–æ–π –¥–æ–∂–¥—å üå¶',
    'rain': '–¥–æ–∂–¥—å üåß',
    'moderate-rain': '—É–º–µ—Ä–µ–Ω–Ω–æ —Å–∏–ª—å–Ω—ã–π –¥–æ–∂–¥—å üåß',
    'heavy-rain': '—Å–∏–ª—å–Ω—ã–π –¥–æ–∂–¥—å üåß',
    'continuous-heavy-rain': '–¥–ª–∏—Ç–µ–ª—å–Ω—ã–π —Å–∏–ª—å–Ω—ã–π –¥–æ–∂–¥—å üåß',
    'showers': '–ª–∏–≤–µ–Ω—å üåß',
    'wet-snow': '–¥–æ–∂–¥—å —Å–æ —Å–Ω–µ–≥–æ–º üå® + üåß',
    'light-snow': '–Ω–µ–±–æ–ª—å—à–æ–π —Å–Ω–µ–≥ üå®',
    'snow': '—Å–Ω–µ–≥ ‚ùÑ',
    'snow-showers': '—Å–Ω–µ–≥–æ–ø–∞–¥ ‚ùÑ',
    'hail': '–≥—Ä–∞–¥ üå®',
    'thunderstorm': '–≥—Ä–æ–∑–∞ üå©',
    'thunderstorm-with-rain': '–¥–æ–∂–¥—å —Å –≥—Ä–æ–∑–æ–π ‚õà',
    'thunderstorm-with-hail': '–≥—Ä–æ–∑–∞ —Å –≥—Ä–∞–¥–æ–º üå© + üå®',
}

wind_dir = {
    'nw': '—Å–µ–≤–µ—Ä–æ-–∑–∞–ø–∞–¥–Ω–æ–µ',
    'n': '—Å–µ–≤–µ—Ä–Ω–æ–µ',
    'ne': '—Å–µ–≤–µ—Ä–æ-–≤–æ—Å—Ç–æ—á–Ω–æ–µ',
    'e': '–≤–æ—Å—Ç–æ—á–Ω–æ–µ',
    'se': '—é–≥–æ-–≤–æ—Å—Ç–æ—á–Ω–æ–µ',
    's': '—é–∂–Ω–æ–µ',
    'sw': '—é–≥–æ-–∑–∞–ø–∞–¥–Ω–æ–µ',
    'w': '–∑–∞–ø–∞–¥–Ω–æ–µ',
    '—Å': '—à—Ç–∏–ª—å',
}

headers = {'X-Yandex-API-Key': os.getenv("YW_API_KEY")}


def get_weather():
    forecasts = []
    weather = '–ü–æ –¥–∞–Ω–Ω—ã–º –Ø–Ω–¥–µ–∫—Å.–ü–æ–≥–æ–¥—ã\n\n'
    for city in CITIES:
        url = f"https://api.weather.yandex.ru/v2/forecast?lat={city.get('lat')}&lon={city.get('lon')}&limit=1&hours=0"
        r = requests.get(url, headers=headers)
        forecasts.append(r.json())
    if not forecasts:
        return "–ù–µ—Ç –¥–∞–Ω–Ω—ã—Ö –ø–æ –ø–æ–≥–æ–¥–µ!"
    for forecast in forecasts:
        weather += f"{forecast.get('geo_object').get('locality').get('name')}: {forecast.get('fact').get('temp')}¬∞C –æ—â—É—â–∞–µ—Ç—Å—è –∫–∞–∫ {forecast.get('fact').get('feels_like')}¬∞C {condition.get(forecast.get('fact').get('condition'))}, –Ω–∞–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –≤–µ—Ç—Ä–∞ {wind_dir.get(forecast.get('fact').get('wind_dir'))} —Å–∫–æ—Ä–æ—Å—Ç—å {forecast.get('fact').get('wind_speed')}–º/—Å.\n\n"
    return weather

def get_forecast():
    forecasts = []
    weather = '–£—Ç—Ä–µ–Ω–∏–π –ø—Ä–≥–Ω–æ–∑ –Ω–∞ –∑–∞–≤—Ç—Ä–∞. –ü–æ –¥–∞–Ω–Ω—ã–º –Ø–Ω–¥–µ–∫—Å.–ü–æ–≥–æ–¥—ã\n\n'
    for city in CITIES:
        url = f"https://api.weather.yandex.ru/v2/forecast?lat={city.get('lat')}&lon={city.get('lon')}&limit=2&hours=0"
        r = requests.get(url, headers=headers)
        forecasts.append(r.json())
    if not forecasts:
        return "–ù–µ—Ç –¥–∞–Ω–Ω—ã—Ö –ø–æ –ø–æ–≥–æ–¥–µ!"
    for forecast in forecasts:
        weather += f"{forecast.get('geo_object').get('locality').get('name')}: {forecast.get('forecasts')[1].get('parts').get('morning').get('temp_avg')}¬∞C –æ—â—É—â–∞–µ—Ç—Å—è –∫–∞–∫ {forecast.get('forecasts')[1].get('parts').get('morning').get('feels_like')}¬∞C {condition.get(forecast.get('fact').get('condition'))}, –Ω–∞–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –≤–µ—Ç—Ä–∞ {wind_dir.get(forecast.get('forecasts')[1].get('parts').get('morning').get('wind_dir'))} —Å–∫–æ—Ä–æ—Å—Ç—å {forecast.get('forecasts')[1].get('parts').get('morning').get('wind_speed')}–º/—Å.\n\n"
    return weather